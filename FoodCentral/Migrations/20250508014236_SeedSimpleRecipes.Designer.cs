// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodCentral.Migrations
{
    [DbContext(typeof(FoodCentralDbContext))]
    [Migration("20250508014236_SeedSimpleRecipes")]
    partial class SeedSimpleRecipes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodCentral.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("FoodCentral.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("MealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instructions = "Boil noodles. Add sauce. Serve hot.",
                            IsVegetarian = false,
                            MealType = "Dinner",
                            Name = "Spaghetti"
                        },
                        new
                        {
                            Id = 2,
                            Instructions = "Cook beef. Place in shells with cheese and lettuce.",
                            IsVegetarian = false,
                            MealType = "Lunch",
                            Name = "Tacos"
                        },
                        new
                        {
                            Id = 3,
                            Instructions = "Grill patties. Place in buns with toppings.",
                            IsVegetarian = false,
                            MealType = "Dinner",
                            Name = "Hamburgers"
                        },
                        new
                        {
                            Id = 4,
                            Instructions = "Coat fish in batter. Fry until golden. Serve with lemon.",
                            IsVegetarian = false,
                            MealType = "Lunch",
                            Name = "Fried Fish"
                        });
                });

            modelBuilder.Entity("FoodCentral.Models.Ingredient", b =>
                {
                    b.HasOne("FoodCentral.Models.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodCentral.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
